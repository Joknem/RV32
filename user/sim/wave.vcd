$date
	Mon May 20 02:07:11 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module top $end
$scope module pc_reg_inst $end
$var wire 1 ! clk $end
$var wire 3 " hold_flag_i [2:0] $end
$var wire 32 # jump_addr_i [31:0] $end
$var wire 1 $ jump_flag_i $end
$var wire 1 % rst $end
$var wire 32 & start_i [31:0] $end
$var reg 32 ' pc_o [31:0] $end
$upscope $end
$upscope $end
$scope module top $end
$scope module rom_inst $end
$var wire 32 ( addr_i [31:0] $end
$var wire 1 ! clk $end
$var wire 1 % rst $end
$var reg 32 ) inst_o [31:0] $end
$upscope $end
$upscope $end
$scope module top $end
$scope module if_id_inst $end
$var wire 1 ! clk $end
$var wire 3 * hold_flag_i [2:0] $end
$var wire 32 + inst_addr_o [31:0] $end
$var wire 32 , inst_o [31:0] $end
$var wire 1 % rst $end
$var wire 32 - inst_i [31:0] $end
$var wire 32 . inst_addr_i [31:0] $end
$var wire 32 / inst_addr [31:0] $end
$var wire 32 0 inst [31:0] $end
$var wire 1 1 hold_en $end
$scope module inst_addr_ff $end
$var wire 1 ! clk $end
$var wire 32 2 def_val [31:0] $end
$var wire 1 1 hold_en $end
$var wire 1 % rst $end
$var wire 32 3 qout [31:0] $end
$var wire 32 4 din [31:0] $end
$var reg 32 5 qout_r [31:0] $end
$upscope $end
$scope module inst_ff $end
$var wire 1 ! clk $end
$var wire 32 6 def_val [31:0] $end
$var wire 1 1 hold_en $end
$var wire 1 % rst $end
$var wire 32 7 qout [31:0] $end
$var wire 32 8 din [31:0] $end
$var reg 32 9 qout_r [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module top $end
$scope module id_inst $end
$var wire 1 % rst $end
$var wire 5 : rs2 [4:0] $end
$var wire 5 ; rs1 [4:0] $end
$var wire 32 < reg2_rdata_i [31:0] $end
$var wire 32 = reg1_rdata_i [31:0] $end
$var wire 5 > rd [4:0] $end
$var wire 7 ? opcode [6:0] $end
$var wire 32 @ inst_i [31:0] $end
$var wire 32 A inst_addr_i [31:0] $end
$var wire 7 B funct7 [6:0] $end
$var wire 3 C funct3 [2:0] $end
$var reg 32 D op1_o [31:0] $end
$var reg 32 E op2_o [31:0] $end
$var reg 5 F reg1_raddr_o [4:0] $end
$var reg 5 G reg2_raddr_o [4:0] $end
$var reg 5 H reg_waddr_o [4:0] $end
$var reg 1 I reg_we_o $end
$upscope $end
$upscope $end
$scope module top $end
$scope module regs_inst $end
$var wire 1 ! clk $end
$var wire 5 J raddr1_i [4:0] $end
$var wire 5 K raddr2_i [4:0] $end
$var wire 1 % rst $end
$var wire 5 L waddr_i [4:0] $end
$var wire 32 M wdata_i [31:0] $end
$var wire 1 I we_i $end
$var reg 32 N rdata1_o [31:0] $end
$var reg 32 O rdata2_o [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx O
bx N
bx M
bx L
bx K
bx J
xI
bx H
bx G
bx F
bx E
bx D
bx C
bx B
bx A
bx @
bx ?
bx >
bx =
bx <
bx ;
bx :
bx 9
bx 8
bx 7
b10011 6
bx 5
bx 4
bx 3
b0 2
01
bx 0
bx /
bx .
bx -
bx ,
bx +
b0 *
bx )
bx (
bx '
b0 &
0%
0$
b0 #
b0 "
0!
$end
#10
b0 O
b0 <
b0 =
b0 N
b0 H
b0 L
1I
b0 G
b0 K
b0 F
b0 J
b0 :
b0 ;
b0 >
b0 B
b0 C
b10011 ?
b0 E
b0 D
b0 '
b0 (
b0 .
b0 4
b10011 ,
b10011 @
b10011 0
b10011 7
b10011 9
b0 +
b0 A
b0 /
b0 3
b0 5
b10011 )
b10011 -
b10011 8
1%
1!
#20
b11111111000000010000000100010011 )
b11111111000000010000000100010011 -
b11111111000000010000000100010011 8
0%
0!
#30
bx D
bx <
bx =
bx N
b10 H
b10 L
b0 G
b0 K
b10 F
b10 J
b10000 :
b10 ;
b10 >
b1111111 B
b11111111111111111111111111110000 E
b100000010010011000100011 )
b100000010010011000100011 -
b100000010010011000100011 8
b11111111000000010000000100010011 ,
b11111111000000010000000100010011 @
b11111111000000010000000100010011 0
b11111111000000010000000100010011 7
b11111111000000010000000100010011 9
b100 '
b100 (
b100 .
b100 4
1!
#40
0!
#50
b1000000010000010000010011 )
b1000000010000010000010011 -
b1000000010000010000010011 8
b1000 :
b1100 >
b0 B
b10 C
b100011 ?
b0 E
b0 D
b1000 G
b1000 K
b1000 '
b1000 (
b1000 .
b1000 4
b100000010010011000100011 ,
b100000010010011000100011 @
b100000010010011000100011 0
b100000010010011000100011 7
b100000010010011000100011 9
b100 +
b100 A
b100 /
b100 3
b100 5
1!
#60
0!
#70
b10000 E
bx D
b1000 H
b1000 L
b0 G
b0 K
b10000 :
b1000 >
b0 C
b10011 ?
b100000000011110010011 )
b100000000011110010011 -
b100000000011110010011 8
b1000 +
b1000 A
b1000 /
b1000 3
b1000 5
b1000000010000010000010011 ,
b1000000010000010000010011 @
b1000000010000010000010011 0
b1000000010000010000010011 7
b1000000010000010000010011 9
b1100 '
b1100 (
b1100 .
b1100 4
1!
#80
0!
#90
b0 <
b0 =
b0 N
b1111 H
b1111 L
b0 F
b0 J
b1111000010100010011 )
b1111000010100010011 -
b1111000010100010011 8
b1 :
b0 ;
b1111 >
b1 E
b0 D
b0 G
b0 K
b10000 '
b10000 (
b10000 .
b10000 4
b100000000011110010011 ,
b100000000011110010011 @
b100000000011110010011 0
b100000000011110010011 7
b100000000011110010011 9
b1100 +
b1100 A
b1100 /
b1100 3
b1100 5
1!
#100
0!
#110
bx D
bx <
bx =
bx N
b1010 H
b1010 L
b1111 F
b1111 J
b0 :
b1111 ;
b1010 >
b0 E
b0 G
b0 K
b110000010010010000000011 )
b110000010010010000000011 -
b110000010010010000000011 8
b10000 +
b10000 A
b10000 /
b10000 3
b10000 5
b1111000010100010011 ,
b1111000010100010011 @
b1111000010100010011 0
b1111000010100010011 7
b1111000010100010011 9
b10100 '
b10100 (
b10100 .
b10100 4
1!
#120
0!
b1 "
b1 *
#130
b1100 G
b1100 K
b10 F
b10 J
b1100 :
b10 ;
b1000 >
b10 C
b11 ?
b0 E
b0 D
b110000010010010000000011 ,
b110000010010010000000011 @
b110000010010010000000011 0
b110000010010010000000011 7
b110000010010010000000011 9
b10100 +
b10100 A
b10100 /
b10100 3
b10100 5
1!
#140
0!
#150
1!
#160
0!
#170
1!
#180
0!
#190
1!
#200
0!
#210
1!
#220
0!
#230
1!
#240
0!
#250
1!
#260
0!
#270
1!
#280
0!
#290
1!
#300
0!
#310
1!
#320
0!
#330
1!
#340
0!
#350
1!
#360
0!
#370
1!
#380
0!
#390
1!
#400
0!
#410
1!
#420
0!
b100 #
1$
#430
b100000010010011000100011 )
b100000010010011000100011 -
b100000010010011000100011 8
b100 '
b100 (
b100 .
b100 4
1!
#440
0!
#450
bx O
b1000 G
b1000 K
b1000 :
b1100 >
b100011 ?
b100000010010011000100011 ,
b100000010010011000100011 @
b100000010010011000100011 0
b100000010010011000100011 7
b100000010010011000100011 9
b100 +
b100 A
b100 /
b100 3
b100 5
1!
#460
0!
#470
1!
#480
0!
#490
1!
#500
0!
#510
1!
#520
0!
#530
1!
#540
0!
#550
1!
#560
0!
#570
1!
#580
0!
#590
1!
#600
0!
#610
1!
#620
0!
#630
1!
#640
0!
#650
1!
#660
0!
#670
1!
#680
0!
#690
1!
#700
0!
#710
1!
#720
0!
#730
1!
#740
0!
#750
1!
#760
0!
#770
1!
#780
0!
#790
1!
#800
0!
#810
1!
#820
0!
#830
1!
#840
0!
#850
1!
#860
0!
#870
1!
#880
0!
#890
1!
#900
0!
#910
1!
#920
0!
#930
1!
#940
0!
#950
1!
#960
0!
#970
1!
#980
0!
#990
1!
#1000
0!
#1010
1!
#1020
0!
#1030
1!
#1040
0!
#1050
1!
#1060
0!
#1070
1!
#1080
0!
#1090
1!
#1100
0!
#1110
1!
#1120
0!
#1130
1!
#1140
0!
#1150
1!
#1160
0!
#1170
1!
#1180
0!
#1190
1!
#1200
0!
#1210
1!
#1220
0!
#1230
1!
#1240
0!
#1250
1!
#1260
0!
#1270
1!
#1280
0!
#1290
1!
#1300
0!
#1310
1!
#1320
0!
#1330
1!
#1340
0!
#1350
1!
#1360
0!
#1370
1!
#1380
0!
#1390
1!
#1400
0!
#1410
1!
#1420
0!
#1430
1!
#1440
0!
#1450
1!
#1460
0!
#1470
1!
#1480
0!
#1490
1!
#1500
0!
#1510
1!
#1520
0!
#1530
1!
#1540
0!
#1550
1!
#1560
0!
#1570
1!
#1580
0!
#1590
1!
#1600
0!
#1610
1!
#1620
0!
#1630
1!
#1640
0!
#1650
1!
#1660
0!
#1670
1!
#1680
0!
#1690
1!
#1700
0!
#1710
1!
#1720
0!
#1730
1!
#1740
0!
#1750
1!
#1760
0!
#1770
1!
#1780
0!
#1790
1!
#1800
0!
#1810
1!
#1820
0!
#1830
1!
#1840
0!
#1850
1!
#1860
0!
#1870
1!
#1880
0!
#1890
1!
#1900
0!
#1910
1!
#1920
0!
#1930
1!
#1940
0!
#1950
1!
#1960
0!
#1970
1!
#1980
0!
#1990
1!
#2000
0!
